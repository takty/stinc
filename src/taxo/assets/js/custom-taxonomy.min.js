(e=>{const{i18n:{__:t},data:{withSelect:s,withDispatch:n},components:{CheckboxControl:o,RadioControl:i,withSpokenMessages:r},compose:{withInstanceId:a,compose:c},element:{Component:l,createElement:m},url:{addQueryArgs:h},apiFetch:u}=e,d=m;const p=c([s(((e,{slug:t})=>{const s=e("core").getTaxonomy(t);if(!s)return{hasAssignAction:!1,terms:[],taxonomy:s,isExclusive:!1};const n="undefined"==typeof wpinc_custom_taxonomy_exclusive?null:wpinc_custom_taxonomy_exclusive,o=n&&("*"===n||n.includes(t)),{getCurrentPost:i,getEditedPostAttribute:r}=e("core/editor");return{hasAssignAction:_.get(i(),["_links",`wp:action-assign-${s.rest_base}`],!1),terms:r(s.rest_base),taxonomy:s,isExclusive:o}})),n((e=>({onUpdateTerms(t,s){e("core/editor").editPost({[s]:t})}}))),r,a])(class extends l{constructor(){super(...arguments),this.onChange=this.onChange.bind(this),this.state={availableTermsTree:[]}}onChange(e){const{onUpdateTerms:t,taxonomy:s,terms:n,isExclusive:o}=this.props;if(o)t([e],s.rest_base);else{t(n.includes(e)?_.without(n,e):[...n,e],s.rest_base)}}onClear(){const{onUpdateTerms:e,taxonomy:t}=this.props;e([],t.rest_base)}componentDidMount(){this.fetchTerms()}componentWillUnmount(){_.invoke(this.fetchRequest,["abort"])}componentDidUpdate(e){this.props.taxonomy!==e.taxonomy&&this.fetchTerms()}fetchTerms(){const{taxonomy:e}=this.props;e&&(this.fetchRequest=u({path:h(`/wp/v2/${e.rest_base}`,{per_page:-1,orderby:"name",order:"asc",_fields:"id,name,parent"})}),this.fetchRequest.then((e=>{this.fetchRequest=null,this.setState({availableTermsTree:x(e)})}),(e=>{"abort"!==e.statusText&&(this.fetchRequest=null)})))}render(){const{hasAssignAction:e,taxonomy:s}=this.props;return e?d("div",{className:"editor-post-taxonomies__hierarchical-terms-list"+(s.hierarchical?"":" non-hierarchical"),key:"term-list",tabIndex:"0",role:"group",ariaLabel:s.name??t("Terms")},this.renderTerms(this.state.availableTermsTree)):null}renderTerms(e){const{terms:t=[],taxonomy:s,isExclusive:n}=this.props;return e.map((e=>{const o=-1!==t.indexOf(e.id)||!t.length&&e.id===s.default_term?e.id:0,i=this.createComponent(e,o,n);return d("div",{className:"editor-post-taxonomies__hierarchical-terms-choice",key:e.id},[i,e.children.length?d("div",{className:"editor-post-taxonomies__hierarchical-terms-subchoices"},this.renderTerms(e.children)):null])}))}createComponent(e,t,s){return s?d(i,{options:[{label:e.name,value:e.id}],selected:t,onChange:()=>{this.onChange(parseInt(e.id,10))}}):d(o,{label:e.name,checked:t,onChange:()=>{this.onChange(parseInt(e.id,10))}})}});function x(e){const t=e.map((e=>({...e,children:[]}))),s=_.groupBy(t,"parent");if(s[void 0]&&s[void 0].length)return t;const n=e=>e.map((e=>{const t=s[e.id]??[];return{...e,children:t.length?n(t):t}}));return n(s[0]||[])}e.hooks.addFilter("editor.PostTaxonomyType","custom-taxonomy",(function(t){const s="undefined"==typeof wpinc_custom_taxonomy_inclusive?null:wpinc_custom_taxonomy_inclusive,n="undefined"==typeof wpinc_custom_taxonomy_exclusive?null:wpinc_custom_taxonomy_exclusive;return function(o){const i=o.slug;return s&&("*"===s||s.includes(i))||n&&("*"===n||n.includes(i))?e.element.createElement(p,o):e.element.createElement(t,o)}}))})(window.wp);
//# sourceMappingURL=custom-taxonomy.min.js.map