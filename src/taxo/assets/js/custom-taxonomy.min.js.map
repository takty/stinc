{"version":3,"sources":["assets/js/custom-taxonomy.js"],"names":["wp","i18n","__","data","withSelect","withDispatch","components","CheckboxControl","RadioControl","withSpokenMessages","compose","withInstanceId","element","Component","createElement","url","addQueryArgs","apiFetch","el","ExTxComp","select","slug","taxonomy","getTaxonomy","hasAssignAction","terms","isExclusive","wct_ex","wpinc_custom_taxonomy_exclusive","includes","getCurrentPost","getEditedPostAttribute","object","path","rest_base","defaultValue","value","__deepGet","__toPath","_","isUndefined","dispatch","onUpdateTerms","restBase","editPost","constructor","super","arguments","this","onChange","bind","state","availableTermsTree","termId","props","without","onClear","componentDidMount","fetchTerms","componentWillUnmount","invoke","fetchRequest","componentDidUpdate","prevProps","per_page","orderby","order","_fields","then","setState","buildTermsTree","xhr","statusText","render","className","hierarchical","key","tabIndex","role","ariaLabel","name","renderTerms","renderedTerms","map","term","sel","indexOf","id","length","default_term","comp","createComponent","children","options","label","selected","parseInt","checked","flatTerms","ts","t","p2ts","groupBy","undefined","setChildren","cs","Array","isArray","obj","i","hooks","addFilter","OrigComp","wct_in","wpinc_custom_taxonomy_inclusive","tx","window"],"mappings":"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","file":"assets\\js\\custom-taxonomy.min.js","sourcesContent":["/**\n * Block Editor Plugin for Exclusive Taxonomy\n * Based on https://wordpress.org/plugins/radio-buttons-for-taxonomies/\n *\n * @author Takuto Yanagida\n * @version 2022-07-01\n */\n\n((wp) => {\n\tconst {\n\t\ti18n      : { __ },\n\t\tdata      : { withSelect, withDispatch },\n\t\tcomponents: { CheckboxControl, RadioControl, withSpokenMessages },\n\t\tcompose   : { withInstanceId, compose },\n\t\telement   : { Component, createElement },\n\t\turl       : { addQueryArgs },\n\t\tapiFetch\n\t} = wp;\n\tconst el = createElement;\n\n\tclass CustomTermSelector extends Component {\n\n\t\tconstructor() {\n\t\t\tsuper(...arguments);\n\t\t\tthis.onChange = this.onChange.bind(this);\n\t\t\tthis.state    = { availableTermsTree: [] };\n\t\t}\n\n\t\tonChange(termId) {\n\t\t\tconst { onUpdateTerms, taxonomy, terms, isExclusive } = this.props;\n\t\t\tif (isExclusive) {\n\t\t\t\tonUpdateTerms([termId], taxonomy.rest_base);\n\t\t\t} else {\n\t\t\t\tconst hasTerm  = terms.includes(termId);\n\t\t\t\tconst newTerms = hasTerm ? _.without(terms, termId) : [...terms, termId];\n\t\t\t\tonUpdateTerms(newTerms, taxonomy.rest_base);\n\t\t\t}\n\t\t}\n\n\t\tonClear() {\n\t\t\tconst { onUpdateTerms, taxonomy } = this.props;\n\t\t\tonUpdateTerms([], taxonomy.rest_base);\n\t\t}\n\n\t\tcomponentDidMount() {\n\t\t\tthis.fetchTerms();\n\t\t}\n\n\t\tcomponentWillUnmount() {\n\t\t\t_.invoke(this.fetchRequest, ['abort']);\n\t\t}\n\n\t\tcomponentDidUpdate(prevProps) {\n\t\t\tif (this.props.taxonomy !== prevProps.taxonomy) {\n\t\t\t\tthis.fetchTerms();\n\t\t\t}\n\t\t}\n\n\t\tfetchTerms() {\n\t\t\tconst { taxonomy } = this.props;\n\t\t\tif (!taxonomy) return;\n\n\t\t\tthis.fetchRequest = apiFetch({\n\t\t\t\tpath: addQueryArgs(`/wp/v2/${taxonomy.rest_base}`, {\n\t\t\t\t\tper_page: -1,\n\t\t\t\t\torderby : 'name',\n\t\t\t\t\torder   : 'asc',\n\t\t\t\t\t_fields : 'id,name,parent',\n\t\t\t\t}),\n\t\t\t});\n\t\t\tthis.fetchRequest.then(\n\t\t\t\t(terms) => {\n\t\t\t\t\tthis.fetchRequest = null;\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tavailableTermsTree: buildTermsTree(terms),\n\t\t\t\t\t});\n\t\t\t\t}, (xhr) => {\n\t\t\t\t\tif (xhr.statusText === 'abort') return;\n\t\t\t\t\tthis.fetchRequest = null;\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\trender() {\n\t\t\tconst { hasAssignAction, taxonomy } = this.props;\n\t\t\tif (!hasAssignAction) return null;\n\n\t\t\treturn el(\n\t\t\t\t'div',\n\t\t\t\t{\n\t\t\t\t\tclassName: `editor-post-taxonomies__hierarchical-terms-list${taxonomy.hierarchical ? '' : ' non-hierarchical'}`,\n\t\t\t\t\tkey      : 'term-list',\n\t\t\t\t\ttabIndex : '0',\n\t\t\t\t\trole     : 'group',\n\t\t\t\t\tariaLabel: taxonomy.name ?? __('Terms'),\n\t\t\t\t},\n\t\t\t\tthis.renderTerms(this.state.availableTermsTree)\n\t\t\t);\n\t\t}\n\n\t\trenderTerms(renderedTerms) {\n\t\t\tconst { terms = [], taxonomy, isExclusive } = this.props;\n\n\t\t\treturn renderedTerms.map((term) => {\n\t\t\t\tconst sel  = (-1 !== terms.indexOf(term.id) || (!terms.length && term.id === taxonomy.default_term)) ? term.id : 0;\n\t\t\t\tconst comp = this.createComponent(term, sel, isExclusive);\n\t\t\t\treturn el(\n\t\t\t\t\t'div',\n\t\t\t\t\t{ className: 'editor-post-taxonomies__hierarchical-terms-choice', key: term.id },\n\t\t\t\t\t[\n\t\t\t\t\t\tcomp,\n\t\t\t\t\t\tterm.children.length ? el(\n\t\t\t\t\t\t\t'div',\n\t\t\t\t\t\t\t{ className: 'editor-post-taxonomies__hierarchical-terms-subchoices' },\n\t\t\t\t\t\t\tthis.renderTerms(term.children)\n\t\t\t\t\t\t) : null\n\t\t\t\t\t]\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\n\t\tcreateComponent(term, sel, isExclusive) {\n\t\t\tif (isExclusive) {\n\t\t\t\treturn el(\n\t\t\t\t\tRadioControl,\n\t\t\t\t\t{\n\t\t\t\t\t\toptions : [{ label: term.name, value: term.id }],\n\t\t\t\t\t\tselected: sel,\n\t\t\t\t\t\tonChange: () => { this.onChange(parseInt(term.id, 10)); },\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn el(\n\t\t\t\tCheckboxControl,\n\t\t\t\t{\n\t\t\t\t\tlabel   : term.name,\n\t\t\t\t\tchecked : sel,\n\t\t\t\t\tonChange: () => { this.onChange(parseInt(term.id, 10)); },\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t}\n\n\tconst ExTxComp = compose( [\n\t\twithSelect((select, { slug }) => {\n\t\t\tconst taxonomy = select('core').getTaxonomy( slug );\n\t\t\tif (!taxonomy) return { hasAssignAction: false, terms: [], taxonomy, isExclusive: false };\n\n\t\t\tconst wct_ex      = typeof wpinc_custom_taxonomy_exclusive === 'undefined' ? null : wpinc_custom_taxonomy_exclusive;\n\t\t\tconst isExclusive = (wct_ex && ('*' === wct_ex || wct_ex.includes(slug)));\n\n\t\t\tconst { getCurrentPost, getEditedPostAttribute } = select('core/editor');\n\t\t\treturn {\n\t\t\t\thasAssignAction: _get(getCurrentPost(), ['_links', `wp:action-assign-${taxonomy.rest_base}`], false),\n\t\t\t\tterms          : getEditedPostAttribute(taxonomy.rest_base),\n\t\t\t\ttaxonomy,\n\t\t\t\tisExclusive,\n\t\t\t};\n\t\t} ),\n\t\twithDispatch((dispatch) => ({\n\t\t\tonUpdateTerms(terms, restBase) {\n\t\t\t\tdispatch('core/editor').editPost({ [restBase]: terms });\n\t\t\t},\n\t\t})),\n\t\twithSpokenMessages,\n\t\twithInstanceId,\n\t])(CustomTermSelector);\n\n\n\t// -----------------------------------------------------------------------------\n\n\n\tfunction buildTermsTree(flatTerms) {\n\t\tconst ts   = flatTerms.map(t => ({ ...t, children: [] }));\n\t\tconst p2ts = _.groupBy(ts, 'parent');\n\t\tif (p2ts[undefined] && p2ts[undefined].length) return ts;\n\n\t\tconst setChildren = ts => ts.map(t => {\n\t\t\tconst cs = p2ts[t.id] ?? [];\n\t\t\treturn {\n\t\t\t\t...t,\n\t\t\t\tchildren: cs.length ? setChildren(cs) : cs,\n\t\t\t};\n\t\t});\n\t\treturn setChildren(p2ts[0] || []);\n\t}\n\n\n\t// -----------------------------------------------------------------------------\n\n\n\tfunction Filter(OrigComp) {\n\t\tconst wct_in = typeof wpinc_custom_taxonomy_inclusive === 'undefined' ? null : wpinc_custom_taxonomy_inclusive;\n\t\tconst wct_ex = typeof wpinc_custom_taxonomy_exclusive === 'undefined' ? null : wpinc_custom_taxonomy_exclusive;\n\n\t\treturn function (props) {\n\t\t\tconst tx = props.slug;\n\t\t\tif (\n\t\t\t\t(wct_in && ('*' === wct_in || wct_in.includes(tx))) ||\n\t\t\t\t(wct_ex && ('*' === wct_ex || wct_ex.includes(tx)))\n\t\t\t) {\n\t\t\t\treturn wp.element.createElement(ExTxComp, props);\n\t\t\t}\n\t\t\treturn wp.element.createElement(OrigComp, props);\n\t\t}\n\t};\n\n\twp.hooks.addFilter(\n\t\t'editor.PostTaxonomyType',\n\t\t'custom-taxonomy',\n\t\tFilter\n\t);\n\n\n\t// For WP 5.7 (From underscore.js v1.13.4) ---------------------------------\n\n\n\tfunction _get(object, path, defaultValue) {\n\t\tvar value = __deepGet(object, __toPath(path));\n\t\treturn _.isUndefined(value) ? defaultValue : value;\n\t}\n\n\tfunction __toPath(path) {\n\t\treturn Array.isArray(path) ? path : [path];\n\t}\n\n\tfunction __deepGet(obj, path) {\n\t\tvar length = path.length;\n\t\tfor (var i = 0; i < length; i++) {\n\t\t\tif (obj == null) return void 0;\n\t\t\tobj = obj[path[i]];\n\t\t}\n\t\treturn length ? obj : void 0;\n\t}\n\n})(window.wp);\n"]}